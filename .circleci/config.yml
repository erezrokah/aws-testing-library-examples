version: 2

aliases:
  - &container_config
    docker:
      - image: circleci/node:carbon

    working_directory: ~/repo

  - &checkout checkout

  - &build_only_filters
    filters:
      branches:
        ignore: /master/

  - &build_deploy_test_filters
    filters:
      branches:
        only: master

  - &save_cache
    save_cache:
      paths:
        - node_modules
      key: dependencies-cache-{{ checksum "yarn.lock" }}

  - &restore_cache
    restore_cache:
      keys:
        - dependencies-cache-{{ checksum "yarn.lock" }}
        # fallback to using the latest cache if no exact match is found
        - dependencies-cache

  - &install_serverless_cli
    run:
      name: Install Serverless Framework
      command: sudo npm i -g serverless

  - &install_dependencies
    run:
      name: Install Dependencies
      command: yarn install

  - &run_linter
    run:
      name: Run Linter
      command: yarn lint

  - &run_prettier
    run:
      name: Run Prettier
      command: yarn prettier:ci

  - &run_deploy
    run:
      name: Run Deploy
      command: yarn deploy

  - &run_tests
    run:
      name: Run Tests
      command: yarn test:ci

  - &run_remove
    run:
      name: Cleanup deployment
      command: yarn run remove

  - &store_test_results
    store_test_results:
      path: reports/junit

jobs:
  build:
    <<: *container_config

    steps:
      - *checkout
      - *restore_cache
      - *install_dependencies
      - *save_cache
      - *run_linter
      - *run_prettier

  deploy-test:
    <<: *container_config

    steps:
      - *checkout
      - *restore_cache
      - *install_serverless_cli
      - *run_deploy
      - *run_tests
      - *run_remove
      - *store_test_results

workflows:
  version: 2
  build-only:
    jobs:
      - build:
          <<: *build_only_filters

  build-deploy-test:
    jobs:
      - build:
          <<: *build_deploy_test_filters
      - deploy-test:
          requires:
            - build
          <<: *build_deploy_test_filters
